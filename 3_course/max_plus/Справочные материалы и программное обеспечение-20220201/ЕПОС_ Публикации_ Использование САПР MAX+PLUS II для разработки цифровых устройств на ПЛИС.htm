<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0036)http://epos.kiev.ua/pubs/cs/mp22.htm -->
<HTML><HEAD><TITLE>ЕПОС. Публикации. Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251"><LINK 
href="/favicon.ico" rel="shortcut icon"><LINK 
href="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/epos.css" 
type=text/css rel=stylesheet>
<META content="MSHTML 6.00.2600.0" name=GENERATOR></HEAD>
<BODY text=#302000 bottomMargin=0 vLink=#9999cc aLink=#ff6666 link=#3333cc 
bgColor=#ffffff leftMargin=0 topMargin=0 rightMargin=0>
<DIV align=center><BR>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD class=sm><A id=b href="http://epos.kiev.ua/">ЕПОС</A><B>.</B> <A id=b 
      href="http://epos.kiev.ua/pubs/">Публикации</A>: <A id=b 
      href="http://epos.kiev.ua/pubs/cs/">Чипсеты</A> 
      <HR color=#003366 noShade SIZE=1>
    </TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <H1>Использование САПР «MAX+plus&nbsp;II» для разработки цифровых 
      устройств на ПЛИС фирмы «Альтера»</H1>
      <P class=at><A href="mailto:support@eposmail.kiev.ua">Владимир 
      ПОРЕЧНЫЙ</A>, кандидат технических наук,<BR>начальник исследовательского 
      отдела сервисного центра «ЕПОС»</P>
      <P>САПР «MAX+plus&nbsp;II» представляет собой интегрированную среду для 
      разработки цифровых устройств на базе программируемых логических 
      интегральных схем (ПЛИС) фирмы «Альтера» (<A 
      href="http://altera.com/">«Altera»</A>) и обеспечивает выполнение всех 
      этапов, необходимых для выпуска готовых изделий:</P>
      <UL>
        <LI>создание проектов устройств; 
        <LI>синтез структур и трассировку внутренних связей ПЛИС; 
        <LI>подготовку данных для программирования или конфигурирования ПЛИС 
        (компиляцию); 
        <LI>верификацию проектов (функциональное моделирование и временной 
        анализ); 
        <LI>программирование или конфигурирование ПЛИС. </LI></UL>
      <P>Порядок получения и инсталляции бесплатных версий САПР 
      «MAX+plus&nbsp;II», а также основные характеристики ПЛИС фирмы «Альтера», 
      поддерживающихся этими версиями, приведены в <A 
      href="http://epos.kiev.ua/pubs/cs/mp2.htm">предыдущей статье</A>.</P>
      <P>Наиболее полное фирменное описание системы «MAX+plus&nbsp;II» 
      содержится в документе <A 
      href="http://www.altera.com/literature/lit-mp2.html">«MAX+plus&nbsp;II 
      Getting Started Manual»</A> на сайте фирмы «Альтера», в который входит 
      учебник («Tutorial»). На русском языке достаточно подробное описание 
      системы «MAX+plus&nbsp;II» можно найти в работе&nbsp;[1]. В настоящей 
      статье приводятся в минимальном объёме сведения, необходимые для 
      начального освоения технологии разработки цифровых устройств на ПЛИС фирмы 
      «Альтера». В качестве примера рассмотрен процесс разработки устройства 
      управления 7-сегментным светодиодным индикатором.</P>
      <H2>Приложения системы «MAX+plus&nbsp;II»</H2>
      <P>В состав пакета «MAX+plus&nbsp;II» входят следующие связанные между 
      собой приложения, реализующие все перечисленные выше этапы разработки 
      цифровых устройств на ПЛИС фирмы «Альтера»:</P>
      <H4>Приложения для ввода проектов (редакторы проектов)</H4>
      <P><B>«Graphic Editor» –</B> графический редактор, предназначенный для 
      ввода проекта в виде схемы соединений символов элементов, извлекаемых из 
      стандартных библиотек пакета либо из библиотеки пользователя.</P>
      <P><B>«Waveform Editor» –</B> редактор временных диаграмм (некоторые 
      авторы называют это приложение сигнальным редактором), который выполняет 
      двойную функцию: на этапе ввода обеспечивает ввод логики проекта в виде 
      диаграмм (эпюр) состояний входов и выходов, а на этапе моделирования 
      обеспечивает ввод диаграмм тестовых (эталонных) входных состояний 
      моделируемого устройства и задание перечня тестируемых выходов.</P>
      <P><B>«Text Editor» –</B> текстовый редактор, предназначенный для создания 
      и редактирования текстовых файлов, содержащих описание логики проекта на 
      языке описания устройств AHDL (Altera Hardware Description Language) или 
      на близких к нему языках типа VHDL, «Verilog». Для освоения языка AHDL 
      можно рекомендовать [1, 2], а также статьи, опубликованные в ряде номеров 
      журнала «Чипньюс» (<A href="http://chipnews.gaw.ru/">«ChipNews»</A>) в 
      2000&nbsp;г.</P>
      <P><B>«Symbol Editor» </B>– символьный редактор, позволяющий редактировать 
      существующие символы и создавать новые. Кстати, любой откомпилированный 
      проект может быть свёрнут в символ, помещён в библиотеку символов и 
      использован как элемент в любом другом проекте.</P>
      <P><B>«Floorplan Editor» – </B>редактор связей (поуровневый планировщик), 
      который на плане расположения основных логических элементов позволяет 
      вручную распределять выводы ПЛИС (закреплять выводы за конкретными 
      входными и выходными сигналами) и перераспределять некоторые внутренние 
      ресурсы ПЛИС.</P>
      <H4>Приложения «MAX+plus&nbsp;II Compiler»</H4>
      <P>Это приложения, входящие в пакет компилятора и предназначенные для 
      синтеза структуры, трассировки связей, проверки корректности проекта и 
      локализации ошибок, формирования файлов программирования или 
      конфигурирования ПЛИС:</P>
      <P><B>«Netlist Extractor» –</B> приложение, обеспечивающее извлечение 
      списка соединений из исходного файла представления проекта, созданного при 
      вводе проекта.</P>
      <P><B>«Database Builder» –</B> приложение, предназначенное для построения 
      базы данных проекта.</P>
      <P><B>«Logic Synthesizer» –</B> приложение, обеспечивающее проверку 
      корректности проекта по формальным правилам и синтез оптимальной структуры 
      проекта.</P>
      <P><B>«Partitioner» –</B> приложение, обеспечивающее разбиение проекта на 
      части в тех случаях, когда ресурсов одного кристалла (микросхемы) 
      недостаточно для реализации проекта.</P>
      <P><B>«Fitter» –</B> трассировщик внутренних связей, обеспечивающий 
      реализацию синтезированной структуры.</P>
      <P><B>«SNF Extractor» –</B> приложение, обеспечивающее извлечение 
      параметров проекта, необходимых для функционального моделирования и 
      временного анализа.</P>
      <H4>Приложения для верификации проектов</H4>
      <P><B>«Simulator» – </B>приложение, которое совместно с редактором 
      временных диаграмм предназначено для функционального моделирования проекта 
      с целью проверки правильности логики его функционирования.</P>
      <P><B>«Timing Analyzer» –</B> приложение, обеспечивающее расчет временных 
      задержек от каждого входа до каждого логически связанного с ним 
выхода.</P>
      <H4>«MAX+plus&nbsp;II Programmer»</H4>
      <P>Наконец, для программирования или конфигурирования ПЛИС используется 
      приложение <B>«MAX+plus&nbsp;II Programmer»</B>.</P>
      <P>Программирование и перепрограммирование микросхем, имеющих встроенную 
      систему программирования (ISP), может осуществляться непосредственно в 
      составе конечного изделия через специальный кабель, подключаемый либо к 
      LPT-порту (Byte Blaster), либо к COM-порту (Bit Blaster) компьютера и 
      технологического 10-контактного соединителя интерфейса JTAG, 
      устанавливаемого на плате изделия. Схемы кабелей можно найти <A 
      href="http://www.altera.com/literature/lit-ds.html">на сайте фирмы 
      «Альтера»</A>. Если на плате изделия устанавливается несколько ПЛИС со 
      встроенными системами программирования, то все они могут программироваться 
      через один технологический разъём. Для этой цели приложение «Programmer» 
      имеет режим «Multi-Device» (к сожалению, бесплатные версии пакета этот 
      режим не поддерживают). Схемы подключения ПЛИС к интерфейсу JTAG 
      приводятся в документации на «Bit Blaster» и «Byte Blaster». Для 
      программирования остальных микросхем необходимо дополнительно использовать 
      внешний программатор, который также может подключаться к COM- или 
      LPT-порту.</P>
      <H4>Сервисные приложения</H4>
      <P>В состав САПР, кроме того, входят три сервисных приложения:</P>
      <P><B>«Design Doctor» – </B>приложение, предназначенное для проверки 
      корректности проекта с использованием эмпирических правил.</P>
      <P><B>«Message Processor» –</B> процессор сообщений, обеспечивающий 
      обработку, вывод на отображение и локализацию (указание места в проекте, к 
      которому оно относится) сообщений трёх типов: сообщений об ошибках 
      («Error»), предупреждений («Warning») и информационных сообщений («Info»). 
      Причину вывода того или иного сообщения можно выяснить через опцию «Help 
      on Message» процессора сообщений. При наличии сообщений об ошибках 
      компиляция проекта невозможна до их полного устранения. При наличии 
      предупреждений компиляция успешно завершается, однако наличие 
      предупреждения свидетельствует об обнаружении проблемы, которая может 
      привести к неверной работе устройства. Поэтому все предупреждения должны 
      быть тщательно проанализированы с использованием «Help on Message», до 
      выяснения причин их появления и последующего устранения этих причин (или 
      игнорирования предупреждения, что иногда бывает возможно). Информационные 
      сообщения нужно только принимать к сведению.</P>
      <P><B>«Hierarhy Display» –</B> приложение, обеспечивающее обзор 
      иерархической структуры проекта, который может состоять из множества 
      составленных в различных редакторах и свёрнутых в символы проектов более 
      низких уровней, причём число уровней не ограничивается. Основной проект 
      (проект самого верхнего уровня) должен быть создан в графическом редакторе 
      (если проект имеет только один уровень иерархии, то он может быть создан в 
      любом редакторе).</P>
      <H2>Рабочие каталоги системы</H2>
      <P>Во время инсталляции пакета создаются два каталога: каталог \MAXPLUS2, 
      который содержит все приложения и библиотеки пакета, и каталог \MAX2WORK, 
      который содержит подкаталог \CHIPTRIP со всеми файлами учебного проекта, 
      рассмотренного в руководстве («MAX+plus&nbsp;II Tutorial»), и ряд 
      подкаталогов, используемых электронным справочником («MAX+plus&nbsp;II 
      Help»). В этом же каталоге \MAX2WORK следует размещать и рабочие каталоги 
      создаваемых проектов устройств.</P>
      <P>Необходимость создания отдельных каталогов для каждого разрабатываемого 
      проекта обусловлена тем, что в процессе разработки проекта системой 
      MAX+plus&nbsp;II создаётся и поддерживается множество файлов, относящихся 
      к текущему проекту. Прежде всего это файл проекта («Project File»), 
      название которого определяет название проекта в целом. Этот файл содержит 
      основную логику и иерархию проекта, обрабатываемую компилятором. Кроме 
      того, создаётся ряд вспомогательных файлов, связанных с проектом, но не 
      являющихся частью логики проекта. Большая часть вспомогательных файлов 
      создаётся и автоматически помещается в каталог проекта в процессе ввода и 
      компиляции проекта. Это прежде всего файлы назначений и конфигурации 
      (.ACF), файлы отчётов (.RPT), файлы данных для функционального 
      моделирования и временного анализа (.SNF), файлы данных для 
      программирования (.POF) и ряд других. Названия этих файлов всегда 
      совпадают с названием проекта. Некоторые вспомогательные файлы создаются 
      пользователем: например, для выполнения функционального моделирования 
      создаётся файл (.SCF), содержащий описание начальных и текущих состояний 
      входных сигналов (входов) и перечень выходов, для которых должны быть 
      определены выходные сигналы. Поэтому перед началом работы над новым 
      проектом следует создать рабочий каталог проекта, при этом имя каталога 
      можно выбирать произвольно (т.е. имя каталога может не совпадать с именем 
      файла проекта).</P>
      <H2>Начало работы</H2></TD></TR></TBODY></TABLE>
<P align=center><IMG height=520 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p01.gif" 
width=820 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис. 1.</B> Основная часть главного окна системы 
      «MAX+plus&nbsp;II»</P>
      <P>После запуска пакета открывается главное окно. В самой верхней строке 
      содержится имя последнего проекта, с которым велась работа. Две следующие 
      строки являются обычными для виндоуз-приложений: строка основного меню и 
      панель инструментов, в левой части которой расположены стандартные функции 
      «Виндоуз» («New», «Open», «Save», «Print», «Cut», «Copy», «Paste», 
      «Undo»), а в правой части – специфические инструменты пакета, с помощью 
      которых осуществляется запуск его основных приложений. Назначение любого 
      инструмента можно узнать, совместив с ним указатель мыши, при этом в 
      строке подсказки (самая нижняя строка окна) появляется текст с пояснением. 
      Для запуска приложений можно использовать также пункты меню 
      «MAX+plus&nbsp;II» (в основном меню).</P>
      <P>Порядок использования основных приложений системы «MAX+plus&nbsp;II» 
      рассмотрим на примере разработки устройства индикации двоичных данных в 
      шестнадцатеричной форме на 2-разрядном 7-сегментном светодиодном 
      индикаторе для гипотетической микропроцессорной системы с 8-разрядной 
      шиной данных и 16-разрядной шиной адреса. Для определённости будем 
      считать, что порт индикации имеет адрес 10h, а в качестве индикатора 
      используется индикатор типа DA-56 с общим анодом, т.е. сигналы управления 
      сегментами должны иметь активные низкие уровни для подсветки сегментов, 
      соответствующих шестнадцатеричному представлению входного двоичного 
      кода.</P>
      <P>Основными элементами такого устройства являются:</P>
      <UL>
        <LI>схема формирования сигнала записи в порт, включающая 16-разрядный 
        адресный селектор и схему стробирования сигнала записи; 
        <LI>8-разрядный регистр порта; 
        <LI>комбинационные схемы преобразования двоичных кодов тетрад в сигналы 
        управления сегментами индикатора (нагрузочная способность ПЛИС фирмы 
        «Альтера» позволяет подключать светодиоды непосредственно к выводам 
        микросхем через нагрузочные сопротивления номиналом 330...390&nbsp;Ом). 
        </LI></UL>
      <P>В разрабатываемый проект целесообразно включить два уровня 
иерархии:</P>
      <UL>
        <LI>уровень структурных элементов, в который входит схема формирования 
        сигнала записи в порт и комбинационные схемы преобразования двоичных 
        кодов тетрад в сигналы управления сегментами индикатора; 
        <LI>уровень проекта в целом. </LI></UL>
      <P>Для начала, используя стандартные средства «Виндоуз», создадим в 
      каталоге \MAX2WORK рабочий каталог под именем \MOD_IND. Затем создадим 
      проект схемы формирования сигнала записи в порт. Будем создавать его в 
      графическом редакторе. Для этого запускаем систему «MAX+plus&nbsp;II» и 
      создаём новый файл (крайний левый значок панели инструментов). В 
      открывшемся диалоговом окне «New» выбираем пункт «Graphic Editor file» и 
      нажимаем кнопку «ОК», при этом автоматически открывается окно графического 
      редактора.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=426 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p02.gif" 
width=652 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис. 2.</B> Окно графического редактора «Graphic 
      Editor»</P>
      <P>Окно редактора имеет ряд дополнительных пунктов основного меню и панель 
      инструментов редактора, расположенную вертикально с левой стороны окна. 
      Сохраним новый файл проекта (через меню «File &gt; Save») под именем 
      WRITE_PORT (расширение будет присвоено автоматически) в созданном каталоге 
      \MOD_IND. Имя файла проекта следует обязательно привязать к имени проекта 
      – это делается при выборе пункта «Set Project to Current File» (в подменю 
      «Project» меню «File» главного меню рабочего окна).</P>
      <P>Для создания графического проекта можно использовать библиотеки 
      примитивов (\MAXPLUS\MAX2LIB\PRIM), макрофункций (\MAXPLUS\MAX2LIB\MF) и 
      параметризированных мегафункций (\MAXPLUS\MAX2LIB\MEGA_LPM).</P>
      <P>Примитивы включают большой набор основных логических элементов, 
      триггеров, элементов входа и выхода (INPUT, OUTPUT, BIDIR), а также 
      вспомогательные элементы: GND (логический ноль), VCC (логическая 
      единица).</P>
      <P>Макрофункции включают главным образом эквиваленты логических микросхем 
      74-й серии.</P>
      <P>Параметризированные мегафункции позволяют реализовывать многовходовые и 
      многоразрядные элементы цифровой схемотехники (логику, регистры, 
      мультиплексоры и т.д.), вводя ряд параметров в специально обозначенных 
      областях условных графических обозначений этих элементов. Порядок 
      использования мегафункций можно найти в соответствующем разделе 
      электронного справочника системы («Help»), а также в документе «LPM Quick 
      Reference Guide» на CD-ROM, прилагаемом к [2].</P>
      <H2>Работа в графическом редакторе</H2>
      <P>Прежде чем перейти непосредственно к созданию проекта схемы 
      формирования сигнала записи в порт, рассмотрим некоторые особенности и 
      свойства графического редактора системы 
  «MAX+plus&nbsp;II».</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=538 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p03.gif" 
width=450 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис. 3.</B> Диалоговое окно размещения элементов</P>
      <P>Для размещения элементов в окне редактора используется диалоговое окно 
      «Enter Symbol», которое можно открыть через меню «Symbol» основного меню 
      редактора (пункт «Enter Symbol»). Однако удобнее вызывать это окно двойным 
      щелчком левой клавиши мыши по свободному пространству открытого окна 
      редактора, после чего выбранный элемент будет размещён именно в этом месте 
      (позиционирование элемента производится по верхнему левому углу условного 
      обозначения элемента). Выбрать и установить необходимый элемент можно 
      двумя способами:</P>
      <OL>
        <LI>Набрать имя элемента (примитива, мега- или макрофункции) в окне 
        «Symbol Name» диалогового окна «Enter Symbol» и нажать «ОК». 
        <LI>Выбрать необходимую библиотеку в окне «Symbol Libraries» диалогового 
        окна «Enter Symbol» и двойным щелчком левой клавиши мыши открыть её. 
        Затем аналогичным образом выбрать необходимый элемент в окне «Symbol 
        File». </LI></OL>
      <P>Установленный элемент можно переместить в другое место обычным приёмом 
      «Drag&amp;Drop». Перемещение элементов может производиться без сохранения 
      или с сохранением соединений, проведённых между элементами, в зависимости 
      от состояния On/Оff кнопок «Rubberbanding Functions», расположенных в 
      нижней части панели инструментов редактора.</P>
      <P>Выводы символов элементов можно соединить сигнальными линиями или 
      присваиваемыми одинаковыми именами. Для проведения сигнальной линии 
      необходимо совместить указатель курсора (конец стрелки) с выводом 
      элемента, при этом курсор автоматически превращается в инструмент 
      рисования ортогональных линий (перекрестие). После этого проводится 
      необходимая линия (при нажатой и удерживаемой левой кнопке мыши). За один 
      приём можно провести два ортогональных отрезка. Если этого недостаточно, 
      то процедуру можно повторять, начиная с конца проведённой линии или с 
      вывода другого элемента.</P>
      <P>Для соединения элементов необязательно проводить сплошные 
      соединительные линии между выводами. Достаточно выводам, которые должны 
      быть соединены между собой, присвоить одинаковые имена. Поименованный 
      вывод элемента называется узлом («Node»). Для присвоения узлу имени 
      необходимо сначала провести короткую сигнальную линию. Так как по 
      окончании рисования линии она остаётся выделенной (выделенные элементы 
      обозначаются красным цветом или красной рамкой), то имя узла можно вводить 
      сразу. Если линия не выделена (имеет чёрный цвет), то необходимо выделить 
      её щелчком левой кнопки мыши в том месте, где должно начинаться имя узла, 
      и набрать на клавиатуре требуемое имя.</P>
      <P>Установленные элементы и группы элементов (любую выделенную область 
      окна) можно удалять, перемещать, поворачивать, копировать и размножать в 
      пределах окна редактора, а также переносить в другие окна через буфер 
      обмена. Все эти операции можно выполнять с использованием пунктов меню 
      «Edit» (в основном меню редактора), предварительно выделив требуемую 
      область или элемент.</P>
      <P>Выделение отдельных элементов, включая и соединительные линии, 
      производится щелчком левой кнопки мыши на изображении символа элемента. 
      Выделение области возможно при нажатой и удерживаемой левой кнопке мыши. 
      Выделенная область обозначается рамкой чёрного цвета, а все выделенные 
      элементы – красным цветом.</P>
      <P>Для удаления, копирования, вырезания, поворота и некоторых других 
      операций с элементами можно использовать выпадающее контекстное меню, 
      которое вызывается щелчком правой кнопки мыши по выбранному элементу. Для 
      перемещения выделенных областей в пределах окна используется способ 
      «Drag&amp;Drop», а для размножения выделенных областей и элементов – 
      «Drag&amp;Drop» при нажатой и удерживаемой клавише CTRL.</P>
      <P>Часть инструментов редактора, расположенных на вертикальной панели с 
      левой стороны окна, предназначена для созданий поясняющих надписей, 
      рисунков и таблиц, которые не являются частью проекта и не обрабатываются 
      компилятором.</P>
      <H2>Этап 1: создание схемы проекта</H2>
      <P>Создание схемы проекта целесообразно начинать с размещения узлов входов 
      и выходов и присвоения этим узлам имён. В нашем случае необходимо 
      разместить входы адресных линий A0...A15, вход сигнала записи /WR (низкий 
      активный уровень) и один выход сигнала записи в порт WR_PORT. Используем 
      для этой цели библиотеку примитивов, которая содержит примитивы INPUT (для 
      входов) и OUTPUT (для выходов). Каждому вводу должно быть присвоено своё 
      имя. Для этого необходимо дважды щёлкнуть мышью на поле (входа/выхода), в 
      появившемся чёрном прямоугольнике набрать новое имя и нажать клавишу 
      ENTER. Переход к набору имени следующего элемента ввода может 
      осуществляться по нажатию клавиши ENTER.</P>
      <P>Логика разрабатываемого проекта также может быть реализована с 
      использованием примитивов: двух элементов OR8 (8-входовый элемент «ИЛИ»), 
      одного элемента NOR3 (3-входовый элемент «ИЛИ-НЕ») и одного инвертора NOT. 
      В описанном выше порядке размещаем требуемые элементы и выполняем 
      необходимые соединения.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=538 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p04.gif" 
width=830 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис. 4.</B> Готовый проект устройства формирования 
      сигнала записи в порт</P>
      <P>Заметим, что предложенный вариант реализации логики устройства – не 
      единственный и не самый лучший. Заинтересованный читатель может 
      реализовать этот проект с использованием языка AHDL (самый 
      предпочтительный вариант) или мегафункции LPM_OR.</P>
      <H2>Этап 2: компиляция и создание символа проекта</H2>
      <P>Следующий этап – компиляция и создание символа проекта для включения 
      его в файл проекта верхнего уровня. Перед компиляцией можно выполнить 
      проверку корректности введённого проекта. Проверка осуществляется через 
      подменю «Project» (меню «File» главного меню рабочего окна) путём выбора 
      пункта «Save&amp;Check» или щелчком левой кнопки мыши на пиктограмме 
      соответствующего инструмента основной панели инструментов.</P>
      <P>Компиляция осуществляется также через подменю «Project» путём выбора 
      пункта «Save&amp;Compile» или опять же с помощью соответствующего 
      инструмента основной панели инструментов.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=463 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p05.gif" 
width=850 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис. 5.</B> Вид окна компилятора после успешного 
      завершения компиляции</P>
      <P>По результатам компиляции процессор сообщений проинформирует нас о том, 
      что для реализации данного проекта могут быть использованы ПЛИС семейства 
      «MAX3000A», а именно ПЛИС типа «EPM&nbsp;3032ALC44» (в корпусе PLCC с 44 
      выводами).</P>
      <P>Создание символа проекта осуществляется через подменю «Project», в 
      котором следует выбрать пункт «Create Default Symbol» – этот пункт 
      становится доступным только после закрытия окна компилятора. Созданный 
      символ будет помещён в каталог проекта. Использование созданных символов, 
      так же как и элементов других библиотек, производится через диалоговое 
      окно «Enter Symbol».</P>
      <H2>Этап 3</H2>
      <P>Следующий шаг – создание проекта и символа комбинационной схемы 
      преобразования двоичного кода тетрады в сигналы управления сегментами 
      индикатора.</P>
      <P class=data id=r>Таблица 1</P>
      <P class=tab>Перечень состояний комбинационной схемы преобразования 
      двоичного кода тетрады</P>
      <TABLE style="TEXT-ALIGN: center" borderColor=#ffffff cellSpacing=0 
      cellPadding=4 width=580 borderColorLight=#000000 border=1 frame=void>
        <TBODY>
        <TR>
          <TD colSpan=12></TD></TR>
        <TR id=b>
          <TD colSpan=4>Состояния входов<SUP>1</SUP></TD>
          <TD rowSpan=2>HEХ-код</TD>
          <TD colSpan=7>Состояния выходов<SUP>2</SUP></TD></TR>
        <TR id=b>
          <TD>In3</TD>
          <TD>In2</TD>
          <TD>In1</TD>
          <TD>In0</TD>
          <TD>/a</TD>
          <TD>/b</TD>
          <TD>/c</TD>
          <TD>/d</TD>
          <TD>/e</TD>
          <TD>/f</TD>
          <TD>/g</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>2</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>3</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>4</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>5</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>6</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>7</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>8</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>9</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>A</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>B</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>C</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>D</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>E</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>F</TD>
          <TD>0</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>1</TD>
          <TD>0</TD>
          <TD>0</TD>
          <TD>0</TD></TR>
        <TR>
          <TD colSpan=12></TD></TR></TBODY></TABLE>
      <P class=sm><SUP>1</SUP>&nbsp;Приведены все возможные состояния входов, 
      соответствующие значениям двоичного кода.</P>
      <P class=sm><SUP>2</SUP>&nbsp;Приведены состояния выходных сигналов 
      управления сегментами индикатора, обеспечивающие отображение символов 
      шестнадцатеричного кода (значения кода см. в отдельной колонке).</P>
      <P>Для создания проекта этого устройства используем редактор временных 
      диаграмм («Waveform Editor»). Для этого следует нажать кнопку открытия 
      нового файла на панели инструментов, в открывшемся диалоговом окне «New» 
      отметить пункт «Waveform Editor file», в соседнем окне выбрать расширение 
      .WDF (расширение .SCF используется для моделирования) и нажать «ОК», после 
      чего открывается окно редактора.</P>
      <P>Окно редактора имеет четыре поля, разделённых вертикальными линиями. 
      Первое поле слева («Name») предназначено для ввода имени узла, во втором 
      поле («Type») отображается тип ввода (INPUT, OUTPUT, BIDIR), в третьем 
      поле («Value») показаны состояния выводов, соответствующие положению 
      специальной вертикальной визирной линии, которая при открытии окна 
      установлена в начало горизонтальной оси, размеченной в единицах 
      времени.</P>
      <P>Для перемещения визира в нужное место необходимо совместить курсор с 
      вершиной визира (при этом курсор примет крестообразную форму) и при 
      нажатой левой кнопке мыши перетащить визир в нужное место.</P>
      <P>Четвёртое поле предназначено для задания требуемых состояний выводов, 
      при этом используются инструменты с панели инструментов редактора, которая 
      расположена вертикально вдоль левой стороны окна. Активизация панели 
      инструментов происходит только в том случае, если выделен один из узлов. 
      Чтобы выделить узел, необходимо щёлкнуть левой кнопкой мыши на имени узла, 
      можно также выделить любой участок вдоль горизонтальной оси, при этом 
      границы выделяемых участков привязываются к сетке.</P>
      <P>Параметры сетки устанавливаются следующим образом: с помощью пункта 
      «End Time» (меню «File») задаётся максимальное значение временного 
      интервала с указанием единиц измерения, а с помощью пункта «Grid Size» 
      (меню «Options») – шаг сетки. В верхней части экрана расположены окна для 
      точного отсчёта интервалов времени.</P>
      <P>Сохраним созданный файл в каталоге \MOD_IND под именем CONV_BIN_HEX и 
      присвоим проекту имя созданного файла (через подменю «Project» меню «File» 
      главного меню рабочего окна, путём выбора пункта «Set Project to Current 
      File»).</P>
      <P>Для ввода имени узла можно использовать пункт «Insert Mode» меню 
      «Node».</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=492 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p06.gif" 
width=526 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис. 6.</B> Диалоговое окно пункта «Insert Mode»</P>
      <P>В верхнее поле «Node Name» необходимо ввести имя узла, в окне «I/O 
      Type» указать тип вывода и нажать «ОК». Кроме того, имена узлов можно 
      вводить другим способом. Для этого необходимо щёлкнуть левой кнопкой мыши 
      в поле «Name», при этом автоматически открывается диалоговое окно «Insert 
      Mode».</P>
      <P>Размещённые узлы можно редактировать, перемещать, удалять, размножать 
      (с обязательным редактированием имени или типа, если это необходимо). Для 
      редактирования используется то же диалоговое окно «Insert Mode». Остальные 
      операции осуществляются аналогично тому, как это делается в графическом 
      редакторе.</P>
      <P>В нашем случае (см. табл.&nbsp;1) необходимо задать 16 возможных 
      состояний 4-х входов и состояния 7-ми выходов, соответствующие каждому 
      состоянию входов. Для этого вся горизонтальная ось должна быть разбита на 
      16 дискрет. Например, установив значение «End Time» 160&nbsp;нс, а «Grid 
      Size» – 10&nbsp;нс, получим 16 дискрет с шагом сетки 10&nbsp;нс. После 
      этого последовательно выделяем узлы и дискреты и с помощью панели 
      инструментов задаём требуемые состояния входов и 
выходов.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=768 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p07.gif" 
width=1024 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;7.</B> Введённый файл проекта примера</P>
      <P>Далее компилируем файл и создаём символ этого устройства, как описано 
      выше.</P>
      <P>После этого в графическом редакторе создаем и компилируем файл проекта 
      всего устройства в целом. В качестве регистра порта используем 
      макрофункцию&nbsp;74374, а в качестве остальных элементов – элемент 
      WRITE_PORT и два элемента CONV_BIN_HEX.</P>
      <P>Порядок открытия, создания и компиляции файла проекта верхнего уровня 
      ничем не отличается от порядка создания и компиляции файла WRITE_PORT, 
      который был рассмотрен выше.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=631 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p08.gif" 
width=832 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;8.</B> Схема описанного в примере проекта 
      устройства индикации</P>
      <H2>Назначение типа ПЛИС и выводов ПЛИС</H2>
      <P>Тип ПЛИС, необходимый для реализации проекта, может быть выбран 
      автоматически или назначен вручную. При создании файла проекта по 
      умолчанию установлен режим автоматического выбора минимальной по объёму 
      ПЛИС, в которой может быть реализован данный проект. При необходимости тип 
      ПЛИС может быть назначен вручную с помощью пункта «Device» (меню «Assign» 
      основного меню системы). После назначения устройства проект необходимо 
      перекомпилировать.</P>
      <P>Выводы ПЛИС также первоначально назначаются автоматически. После 
      завершения работы над проектом необходимо закрепить или переназначить 
      выводы ПЛИС, для того чтобы при возможной последующей доработке (отладке) 
      проекта в составе всего изделия компилятор не мог изменить их назначение. 
      Эта операция выполняется с помощью редактора «Floorplan Editor», который 
      запускается либо через меню «MAX+plus&nbsp;II» (в основном меню), либо 
      через панель инструментов.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=625 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p09.gif" 
width=859 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;9.</B> Окно редактора связей «Floorplan 
      Editor» (при установленном режиме отображения текущих назначений 
      выводов)</P>
      <P>С левой стороны окна имеется панель инструментов, среди которых имеется 
      две кнопки: одна из них устанавливает режим отображения результатов 
      компиляции (...last compilation), вторая – режим отображения текущих 
      назначений выводов (...current assignments). Напомним, что назначение 
      кнопок панелей инструментов поясняется в строке подсказки в нижней части 
      окна.</P>
      <P>Для назначения или закрепления выводов необходимо мышью перетащить 
      имена выводов, отображаемых в окне «Unassigned Nodes&amp;Pins», на 
      соответствующие номера выводов ПЛИС, а затем перекомпилировать проект. 
      После этого любые изменения, вносимые во внутреннюю структуру проекта, 
      т.е. не связанные с добавлением или удалением выводов, не будут изменять 
      назначение выводов. Заметим, что ПЛИС семейства «MAX&nbsp;7000S» (а также 
      некоторые другие) имеют встроенную систему программирования ISP, которая 
      использует четыре вывода: #TDI, #TDO, #TMS и #TSK. Эти выводы не должны 
      использоваться для других целей.</P>
      <H2>Завершение работы</H2>
      <P>Все результаты работы над проектом фиксируются в файле с расширением 
      .RPT, который представляет собой обычный текстовый файл и содержит 
      подробное описание реализованного проекта, в том числе и описание 
      назначения выводов, необходимое для разработки принципиальной схемы 
      целевого устройства. Файл .RPT можно открыть через меню «File» или 
      нажатием соответствующей кнопки на панели инструментов.</P>
      <P>Для завершения работы над проектом необходимо провести функциональное 
      моделирование. Для этого необходимо создать исходный файл с расширением 
      .SCF, задать тестовые (эталонные) состояния входов, выбрать проверяемые 
      выходы и запустить «Simulator».</P>
      <P>Для создания исходного файла необходимо открыть новый файл, в 
      диалоговом окне «New» отметить пункт «Waveform Editor file», установить в 
      соседнем поле окна расширение .SCF и нажать «ОК», а затем сохранить его 
      через меню «File» основного меню. После этого необходимо связать файл с 
      проектом. Для этого необходимо войти в меню «Node» и выбрать пункт «Enter 
      Nodes from SNF».</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=446 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p10.gif" 
width=672 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;10.</B> Диалоговое окно «Enter Nodes from 
      SNF»</P>
      <P>После нажатия кнопки «List» в левой панели диалогового окна «Enter 
      Nodes from SNF» появляется список доступных узлов («Available 
      Nodes&amp;Groups»), выделенный синим цветом, который необходимо перенести 
      на правую панель («Selected Nodes&amp;Groups»), для чего необходимо нажать 
      кнопку со стрелкой, расположенную между панелями. После нажатия кнопки 
      «ОК» в окне редактора появляется готовый шаблон (заготовка) для задания 
      тестовых состояний входов.</P>
      <P>Перед началом ввода тестовых состояний необходимо в порядке, описанном 
      выше, задать длительность интервала моделирования и установить шаг сетки с 
      учётом временных параметров реальных сигналов, которые будут подаваться на 
      вход ПЛИС в целевом устройстве.</P>
      <P>Сами тестовые состояния входов вводятся так же, как и при создании 
      проекта (см. выше). В данном случае моделируется процесс записи двоичного 
      кода&nbsp;01010101 по адресу&nbsp;10h.</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=631 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p11.gif" 
width=501 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;11.</B> Фрагмент исходного файла для 
      моделирования разработанного устройства с заданными состояниями входов</P>
      <P>«Simulator» может быть запущен либо через меню «MAX+plus&nbsp;II» (в 
      основном меню), либо через панель инструментов, при этом открывается 
      диалоговое окно с кнопками «Start» и «Open SCF». Для начала моделирования 
      необходимо нажать кнопку «Start», а для просмотра результатов – «Open 
      SCF».</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=632 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p12.gif" 
width=512 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;12.</B> Фрагмент файла с результатами 
      функционального моделирования</P>
      <P>Для определения временных соотношений используется приложение «Timing 
      Analyzer», которое запускается так же, как «Simulator». Результаты расчёта 
      временных задержек отображаются в виде таблицы «Delay 
  Matrix»</P></TD></TR></TBODY></TABLE>
<P align=center><IMG height=447 alt="" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/mp22_p13.gif" 
width=684 vspace=10 border=0></P>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=sm id=mb><B>Рис.&nbsp;13. </B>Фрагмент таблицы «Delay Matrix»</P>
      <P>В заключение ещё раз подчеркнём, что рассмотренный пример является 
      одним из самых простых и иллюстрирует только некоторые приёмы и 
      возможности работы с САПР «MAX+plus&nbsp;II». Вместе с тем надеемся, что 
      приведённый пример достаточно хорошо иллюстрирует эффективность системы 
      «MAX+plus&nbsp;II» и способен стимулировать стремление заинтересованных 
      специалистов к более глубокому изучению, освоению и использованию этого 
      инструмента в их практической работе. Желаем творческих успехов!</P>
      <P>&nbsp;</P>
      <P class=data>Литература</P>
      <OL>
        <LI class=sm>Стешенко В.Б. ПЛИС фирмы ALTERA: Проектирование устройств 
        обработки сигналов. – М.: Додэка, 2000. 
        <LI class=sm>Антонов А.П. Язык описания цифровых устройств AlteraHDL: 
        Практический курс. – М.: ИП «Радиософт», 2001. – К книге прилагается 
        CD-ROM, содержащий САПР «MAX+PLUS&nbsp;II». </LI></OL>
      <P>&nbsp;</P>
      <P class=sm><B>Дата публикации:</B> 28 февраля 2001 года.</P>
      <P class=sm><B>Архив:</B> <A 
      href="mailto:mail-server-epos@epos.kiev.ua?subject=cs_mp22.zip">по 
      почте</A>; <A href="http://epos.kiev.ua/mailserv/cs_mp22.zip">по 
      ftp</A>.</P>
      <P>&nbsp;</P>
      <P><A href="http://epos.kiev.ua/forum/list.php?f=8">Обсудить в форуме 
      &gt;&gt;</A></P>
      <P>&nbsp;</P><IFRAME marginWidth=0 marginHeight=0 
      src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/index.php" 
      frameBorder=0 width=580 scrolling=no height=70></IFRAME>
      <P>&nbsp;</P></TD></TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=580 border=0>
  <TBODY>
  <TR>
    <TD>
      <P class=data>Электронная версия:</P>
      <P class=sm>© <A id=b href="http://epos.kiev.ua/">ЕПОС</A><B>.</B> <A id=b 
      href="http://epos.kiev.ua/pubs/">Публикации</A>, 
  1998-2004</P></TD></TR></TBODY></TABLE><BR>
<TABLE style="FONT-SIZE: 84%" cellSpacing=0 cellPadding=4 width=580 border=0>
  <TBODY>
  <TR>
    <TD bgColor=#99d8ff height=1></TD></TR>
  <TR>
    <TD align=middle bgColor=#f4fff4>
      <TABLE cellSpacing=0 cellPadding=0 border=0>
        <TBODY>
        <TR bgColor=#f4fff4>
          <TD align=right>
            <DIV class=sm1 style="MARGIN-BOTTOM: -5px">Поиск:&nbsp; </DIV></TD>
          <TD>
            <FORM style="MARGIN: 0px" action=/search/ method=get><INPUT 
            type=hidden value=0 name=CGIQUERY> <INPUT type=hidden value=1 
            name=dtb> <INPUT type=hidden value=RUS name=lng> <INPUT type=hidden 
            value=1 name=cli> <INPUT 
            style="BORDER-RIGHT: #6699ff 1px solid; BORDER-TOP: #6699ff 1px solid; BORDER-LEFT: #6699ff 1px solid; BORDER-BOTTOM: #6699ff 1px solid" 
            maxLength=100 size=58 name=query>&nbsp; <INPUT style="BORDER-RIGHT: #6699ff 1px solid; BORDER-TOP: #6699ff 1px solid; FONT-SIZE: 60%; BORDER-LEFT: #6699ff 1px solid; BORDER-BOTTOM: #6699ff 1px solid; BACKGROUND-COLOR: #e4f8e4" type=submit value=Поиск> 
            </FORM></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD align=middle bgColor=#f4fff4><A 
      href="http://www.epos.kiev.ua/news/">События</A> • <A 
      href="http://www.epos.kiev.ua/pr/">Продукция</A> • <A 
      href="http://www.epos.kiev.ua/prices/">Прайс-листы</A> • <A 
      href="http://www.epos.kiev.ua/pubs/">Публикации</A> • <A 
      href="http://www.epos.kiev.ua/forum/">Форум</A> </TD></TR>
  <TR>
    <TD bgColor=#99d8ff height=1></TD></TR>
  <TR>
    <TD align=middle bgColor=#f4f4f4><A href="http://epos.kiev.ua/about/">О 
      компании</A> • <A href="http://epos.kiev.ua/about/contacts.htm">Связаться 
      с нами</A> • <A href="http://epos.kiev.ua/subscribe">Рассылка</A> </TD></TR>
  <TR>
    <TD bgColor=#99d8ff height=1></TD></TR>
  <TR>
    <TD align=middle bgColor=#ffffff>©&nbsp;<A 
      href="http://www.epos.kiev.ua/">ООО «ЕПОС»</A>, 
1998...2004</TD></TR></TBODY></TABLE><BR><A 
href="http://top100.rambler.ru/top100/"><IMG height=31 alt="Rambler's Top100" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/banner-88x31-rambler-gray2.gif" 
width=88 border=0></A> <!-- bigmir)net TOP 100 --><A 
href="http://www.bigmir.net/?cl=13684" target=_blank>
<SCRIPT language=javascript><!--
bmQ='<img src=http://c.bigmir.net/?s13684&t8'
bmD=document
bmD.cookie="b=b"
if(bmD.cookie)bmQ+='&c1'
//--></SCRIPT>

<SCRIPT language=javascript1.2><!-- 
bmS=screen;bmQ+='&d'+(bmS.colorDepth?bmS.colorDepth:bmS.pixelDepth)+"&r"+bmS.width;
//--></SCRIPT>

<SCRIPT language=javascript><!--
bmF = bmD.referrer.slice(7);
((bmI=bmF.indexOf('/'))!=-1)?(bmF=bmF.substring(0,bmI)):(bmI=bmF.length);
if(bmF!=window.location.href.substring(7,7+bmI))bmQ+='&f'+escape(bmD.referrer);
bmD.write(bmQ+" border=0 width=88 height=31 alt='bigmir TOP100'>");
//--></SCRIPT>
</A><!-- BEGIN OF PING CODE --><A href="http://www.topping.com.ua/" 
target=_top><FONT color=#ffffff size=1>
<SCRIPT>
//<!--
id='060398190824';
img='9';
an=navigator.appName; d=document;  w=''; c='';
script='http://counter.topping.com.ua:80/cgi-bin/pinger.cgi';
function ping() {
d.write("<img src=\""+script+"?id="+id+"&img="+img+"&w="+w+"&c="+c+"&ref="+escape(d.referrer)+"\" width=88 height=31 border=0 alt=\"Rated by PING\">");
}
//-->
</SCRIPT>

<SCRIPT language=javascript1.2>
//<!--
s=screen;
w=s.width;
an!="Netscape"?c=s.colorDepth:c=s.pixelDepth
//-->
</SCRIPT>

<SCRIPT>
//<!--
ping()
//-->
</SCRIPT>
<NOSCRIPT><IMG height=31 alt="Rated by PING" 
src="ЕПОС_ Публикации_ Использование САПР MAX+PLUS II для разработки цифровых устройств на ПЛИС.files/ping.gif" 
width=88 border=0> 
</NOSCRIPT></FONT></A><!-- END OF PING CODE --></DIV></BODY></HTML>
