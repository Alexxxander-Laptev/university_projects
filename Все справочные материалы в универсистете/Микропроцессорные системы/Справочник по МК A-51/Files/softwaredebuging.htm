<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="Template"
content="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Отладка прикладного програмного обеспечения микроконтроллеров</title>
</head>

<body background="images/fill1816.gif" link="#0000FF"
vlink="#800080">

<p><a
name="Отладка прикладного программного обеспечения микроконтроллеров"></a><font
size="5" face="Times New Roman"><strong>6. Отладка
прикладного программного
обеспечения микроконтроллеров</strong></font></p>

<hr size="4" color="#000000">

<p align="left"><font size="4" face="Times New Roman">После
получения объектного кода
прикладной программы неизбежно
наступает этап отладки</font><font size="4">,</font><font
size="4" face="Times New Roman"> т</font><font size="4">.</font><font
size="4" face="Times New Roman">е</font><font size="4">. </font><font
size="4" face="Times New Roman">установления
факта ее работоспособности</font><font
size="4">, </font><font size="4" face="Times New Roman">а
также выявления (локализации</font><font
size="4">)</font><font size="4" face="Times New Roman"> и
устранения ошибок</font><font size="4">.</font><font
size="4" face="Times New Roman"> Без этого этапа
разработки никакое программное
обеспечение вообще не имеет</font><font
size="4"> </font><font size="4" face="Times New Roman">права
на существование. Отладка
программного обеспечения
представляет собой отдельную
сложную задачу, которая почти не
поддается формализации и требует
для своего выполнения высокого
профессионализма и глубоких знаний
разработчика.</font></p>

<p align="left"><font size="4" face="Times New Roman">Обычно
отладка прикладного программного
обеспечения осуществляется в
несколько этапов. Простые
(синтаксические) ошибки выявляются
уже на этапе трансляции. Далее
необходимо выполнить:</font></p>

<p align="left"><font size="4" face="Times New Roman">автономную
отладку каждой процедуры в
статическом режиме, позволяющую
проверить правильность проводимых
вычислений, правильность
последовательности переходов
внутри процедуры (отсутствие
&quot;зацикливания&quot;) и</font><font size="4"> </font><font
size="4" face="Times New Roman">т.п.;</font></p>

<p align="left"><font size="4" face="Times New Roman">комплексную
отладку программного обеспечения в
статическом режиме, позволяющую
проверить правильность алгоритма
управления (по последовательности
формирования управляющих
воздействий);</font></p>

<p align="left"><font size="4" face="Times New Roman">комплексную
отладку в динамическом режиме без
подключения объекта для
определения реального времени
выполнения программы и ее
отдельных фрагментов. </font></p>

<p align="left"><font size="4" face="Times New Roman">Следует
иметь в виду, что автономная
отладка отдельных модулей
настолько проще и эффективнее
отладки всей прикладной программы,
что переходить к этапу комплексной
отладки целесообразно только после
исчерпания всех средств автономной
отладки.</font></p>

<p align="left"><font size="4" face="Times New Roman">Вышеперечисленные
этапы отладки осуществляются
обычно с использованием кросс-
систем.</font></p>

<p align="left"><font size="4" face="Times New Roman">В
состав кросс-систем входят
программы-отладчики (обобщенное
имя </font><font size="4">–</font><font size="4"
face="Times New Roman"> DEBUG), интерпретирующие
(моделирующие) выполнение программ,
написанных для МК. Такие
программные имитаторы позволяют
эффективно отлаживать
вычислительные процедуры, а также
алгоритм функционирования
контроллера. </font></p>

<p align="left"><font size="4" face="Times New Roman">Разработчику
предоставлен доступ к любому
ресурсу МК, имеется возможность
покомандного и пофрагментного
исполнения программ и останова по
условию, а также подсчета числа
тактов выполнения тех или иных
фрагментов программы,
инициирования прерывания,
дизассемблирования содержимого ПП
и т.д.</font></p>

<p align="left"><font size="4" face="Times New Roman">Кросс-отладчики
позволяют промоделировать
практически все возможные варианты
работы программы и тем самым
убедиться в ее работоспособности.
На этом же этапе возможна проверка
работоспособности программы при
нештатных ситуациях в условиях
поступления некорректных входных
воздействий (для применений с
повышенными требованиями по
безопасности).</font></p>

<p align="left"><font size="4" face="Times New Roman">Наиболее
мощные имитаторы должны позволять
моделировать и среду обитания МК,
т.е. различного рода объекты и
датчики, подключаемые к нему. При
этом появляется возможность
выполнять комплексную отладку
программного обеспечения, не
опасаясь, что возможные ошибки в
программе, алгоритме или
некорректные действия оператора
приведут к выходу из строя
технических средств
разрабатываемой системы. Главным
недостатком кросс-систем является
невозможность прогона программы в
реальном масштабе времени, т.е. со
скоростью,</font><font size="4"> </font><font size="4"
face="Times New Roman">близкой к скорости
выполнения программы в самом МК, а
также невозможность
комплексирования аппаратурных и
программных средств
разрабатываемой системы. В силу
этих причин достоверность
прикладных программ, отлаженных в
кросс-режиме, недостаточно высока.</font></p>

<p align="left"><font size="4" face="Times New Roman">Отдельные
фрагменты программного
обеспечения, требующие отладки в
реальном времени, могут быть
проверены на отладочном модуле.
Отладочный модуль представляет
собой небольшую, как правило,
одноплатную микроЭВМ (правильнее,
микроконтроллер), построенную на
однотипном МК. Однако при отладке
приходится учитывать ограничения,
связанные с тем, что часть ресурсов
отладочного модуля (пространство
адресов памяти программ и памяти
данных, некоторые линии портов и
уровни прерываний) не может быть
использована прикладным ПО, так как
вынужденно используется
резидентной операционной системой
(ОС). Резидентная ОС, или Монитор, -
это программа, обеспечивающая
взаимодействие оператора с
отладочным модулем и
предоставляющая ему ряд команд,
облегчающих отладку прикладного
программного обеспечения. К
отладочному модулю может быть
также подключено дополнительное
оборудование, необходимое
разрабатываемой системе </font><font
size="4">(</font><font size="4" face="Times New Roman">внешняя
память, порты, таймеры).</font></p>

<p align="left"><font size="4" face="Times New Roman">Наиболее
полная и комплексная отладка
прикладного программного
обеспечения совместно с
аппаратурными средствами
контроллера может быть произведена
на инструментальной микроЭВМ с так
называемым внутрисхемным
эмулятором (ВСЭ). Прототип
разрабатываемой системы через
панельку (сокет) для установки МК
плоским многожильным кабелем
соединяется с ВСЭ, который в свою
очередь обеспечивает доступ ко
всем техническим средствам
инструментальной микроЭВМ. При
этом почти все ресурсы МК остаются
в распоряжении прикладного
программного обеспечения. Под
управлением микроЭВМ ВСЭ позволяет
прогонять прикладную программу или
ее отдельные фрагменты в реальном
темпе, останавливать выполнение
программы по многим признакам,
делать трассировку внешних
сигналов МК и системы во время
исполнения программы.
Достоверность программного
обеспечения, отлаженного на
инструментальной микроЭВМ с
помощью ВСЭ, высока, хотя и не равна
единице.</font></p>

<p align="left"><font size="4" face="Times New Roman">В
любом случае для доводки
прикладного программного
обеспечения контроллера
необходимы комплексные и
всесторонние испытания
разработанной системы в реальном
окружении и во всевозможных
режимах.</font></p>

<p>&nbsp;</p>

<p><a
href="#отладка прикладного программного обеспечения микроконтроллеров"><font
color="#0000FF" size="4">Отладка прикладного
программного обеспечения
микроконтроллеров</font></a></p>

<hr size="4" color="#008000">
<div align="center"><center>

<table border="0" cellpadding="30" cellspacing="0">
    <tr>
        <td><p align="center"><a href="strategyofdevelop.htm"><font
        color="#0000FF" size="4">Методика
        разработки прикладного
        программного обеспечения
        МК-систем</font></a></p>
        </td>
        <td valign="top"><p align="center"><a href="start.htm"><font
        color="#0000FF" size="4">Первая страница</font></a></p>
        </td>
    </tr>
</table>
</center></div>
</body>
</html>
